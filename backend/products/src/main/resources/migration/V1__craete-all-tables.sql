-- Table: public.users

-- DROP TABLE IF EXISTS public.users;

CREATE TABLE IF NOT EXISTS public.users
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    age integer,
    email character varying(255) COLLATE pg_catalog."default",
    login character varying(255) COLLATE pg_catalog."default",
    name character varying(255) COLLATE pg_catalog."default",
    password character varying(255) COLLATE pg_catalog."default",
    role character varying(255) COLLATE pg_catalog."default",
    secondname character varying(255) COLLATE pg_catalog."default",
    money integer,
    date_registration timestamp(6) without time zone,
    phone character varying(255) COLLATE pg_catalog."default",
    sex character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT uk6dotkott2kjsp8vw4d0m25fb7 UNIQUE (email),
    CONSTRAINT ukow0gan20590jrb00upg3va2fn UNIQUE (login),
    CONSTRAINT users_money_check CHECK (money >= 0),
    CONSTRAINT users_role_check CHECK (role::text = ANY (ARRAY['USER'::character varying, 'ADMIN'::character varying]::text[]))
    )

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.users
    OWNER to postgres;

-- Table: public.products

-- DROP TABLE IF EXISTS public.products;

CREATE TABLE IF NOT EXISTS public.products
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    brand character varying(255) COLLATE pg_catalog."default",
    description character varying(255) COLLATE pg_catalog."default",
    img character varying(255) COLLATE pg_catalog."default",
    material character varying(255) COLLATE pg_catalog."default",
    price integer,
    type character varying(255) COLLATE pg_catalog."default",
    model character varying(255) COLLATE pg_catalog."default",
    color character varying(255) COLLATE pg_catalog."default",
    discount integer DEFAULT 0,
    price_with_discount integer DEFAULT 0,
    price_discount integer DEFAULT 0,
    CONSTRAINT products_pkey PRIMARY KEY (id),
    CONSTRAINT products_discount_check CHECK (discount <= 99)
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.products
    OWNER to postgres;
-- Index: products_type_hash_index

-- DROP INDEX IF EXISTS public.products_type_hash_index;

CREATE INDEX IF NOT EXISTS products_type_hash_index
    ON public.products USING hash
    (type COLLATE pg_catalog."default")
    TABLESPACE pg_default;

-- Table: public.basket

-- DROP TABLE IF EXISTS public.basket;

CREATE TABLE IF NOT EXISTS public.basket
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    product_id integer NOT NULL,
    user_id integer NOT NULL,
    count_product integer,
    size_product character varying(255) COLLATE pg_catalog."default",
    stutus character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT basket_pkey PRIMARY KEY (id)
    )

    TABLESPACE pg_default;

CREATE UNIQUE INDEX idx_unique_basket
    ON public.basket (product_id, user_id, count_product, size_product, stutus);

ALTER TABLE IF EXISTS public.basket
    OWNER to postgres;

-- Table: public.orders

-- DROP TABLE IF EXISTS public.orders;

CREATE TABLE IF NOT EXISTS public.orders
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    created_at timestamp(6) without time zone NOT NULL,
    discount_price integer,
    order_price integer,
    result_price integer,
    status character varying(255) COLLATE pg_catalog."default" NOT NULL,
    user_id integer,
    adress_id integer,
    name_recipient character varying(255) COLLATE pg_catalog."default",
    phone_recipient character varying(255) COLLATE pg_catalog."default",
    second_name_recipient character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT orders_pkey PRIMARY KEY (id)
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.orders
    OWNER to postgres;

-- Table: public.sizes

-- DROP TABLE IF EXISTS public.sizes;

CREATE TABLE IF NOT EXISTS public.sizes
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    size_value character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT sizes_pkey PRIMARY KEY (id)
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.sizes
    OWNER to postgres;

-- Table: public.product_size

-- DROP TABLE IF EXISTS public.product_size;

CREATE TABLE IF NOT EXISTS public.product_size
(
    product_id integer NOT NULL,
    size_id bigint NOT NULL,
    CONSTRAINT product_size_pkey PRIMARY KEY (product_id, size_id),
    CONSTRAINT fk1yl8bbmokvonm64131xlscnci FOREIGN KEY (size_id)
    REFERENCES public.sizes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION,
    CONSTRAINT fk9qjgp0xvl5jfetdt683i7wqwr FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.product_size
    OWNER to postgres;

-- Table: public.adress

-- DROP TABLE IF EXISTS public.adress;

CREATE TABLE IF NOT EXISTS public.adress
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    city character varying(255) COLLATE pg_catalog."default",
    created_at timestamp(6) without time zone,
    number_apartment integer,
    number_house integer,
    number_intercom integer,
    street character varying(255) COLLATE pg_catalog."default",
    user_id integer,
    CONSTRAINT adress_pkey PRIMARY KEY (id)
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.adress
    OWNER to postgres;

-- Table: public.black_list_tokens

-- DROP TABLE IF EXISTS public.black_list_tokens;

CREATE TABLE IF NOT EXISTS public.black_list_tokens
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    token character varying(400) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT black_list_tokens_pkey PRIMARY KEY (id)
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.black_list_tokens
    OWNER to postgres;
